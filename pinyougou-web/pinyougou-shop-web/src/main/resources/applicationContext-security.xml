<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:seurity="http://www.springframework.org/schema/security"
       xmlns:securty="http://www.springframework.org/schema/security"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:secyrity="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 配置哪些请求URL不需要拦截 -->
    <security:http pattern="/*.html" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <security:http pattern="/seller/save" security="none"/>
    <security:http pattern="/verify" security="none"/>

    <!-- 配置自定义认证入口，应用认证入口bean -->
    <security:http entry-point-ref="authenticationEntryPoint">
        <!--
            permitAll()
        -->
        <secyrity:intercept-url pattern="/login" access="permitAll()"/>
        <security:intercept-url pattern="/**" access="hasRole('SELLER')"/>

        <security:csrf disabled="true"/>
        <seurity:logout logout-url="/logout" invalidate-session="true"/>

        <security:headers>
            <securty:frame-options policy="SAMEORIGIN"/>
        </security:headers>

    </security:http>

    <!-- 配置自定义入口 -->
    <bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="/login"/>
    </bean>

    <!--##################### 配置身份认证管理器 ####################-->
    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsService">
            <!-- 配置加密方式,应用下面的bean -->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 密码加密 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--##################### 配置服务消费者 ######################-->
    <!-- 应用名称 -->
    <dubbo:application name="pinyougou-shop-web"/>

    <!-- 使用zookeeper注册中心发现暴露的服务地址 -->
    <dubbo:registry address="zookeeper://192.168.12.131:2181" />

    <!-- 生成远程服务接口代理对象，可以和本地bean一样使用brandService -->
    <dubbo:reference id="sellerService" interface="com.pinyougou.service.SellerService"/>

    <!-- 配置userDetailsService，用来注入 -->
    <bean id="userDetailsService" class="com.pinyougou.shop.service.UserDetailsServiceImpl">
        <property name="sellerService" ref="sellerService"/>
    </bean>

</beans>